---
name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [main, develop]
  workflow_dispatch: {}

permissions:
  contents: read
  pull-requests: write
  checks: write
  statuses: write

jobs:
  pr-validation:
    name: PR Validation
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate PR title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            chore
          requireScope: false

      - name: Install Nix
        uses: cachix/install-nix-action@v26
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes

      - name: Check flake lock
        run: |
          if ! nix flake check --print-build-logs; then
            echo "Flake check failed. Consider running 'nix flake update' to update inputs."
            exit 1
          fi

      - name: Build with Nix
        run: nix build .#mujaos --print-build-logs

      - name: Check PR size
        run: |
          FILES_CHANGED="$(git diff --name-only "origin/${{ github.base_ref }}"...HEAD | wc -l)"
          LINES_CHANGED="$(git diff --shortstat "origin/${{ github.base_ref }}"...HEAD \
            | grep -Eo '[0-9]+ insertions|[0-9]+ deletions' \
            | grep -Eo '[0-9]+' \
            | awk '{sum+=$1} END {print sum}')"
          echo "Files changed: $FILES_CHANGED"
          echo "Lines changed: $LINES_CHANGED"
          if [ "$LINES_CHANGED" -gt 1000 ]; then
            echo "::warning::This PR is large ($LINES_CHANGED lines). Consider splitting it."
          fi

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const body = `## PR Validation Passed
            CI checks are running. Reviewers will be assigned.`;
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            const botComment = comments.find(c =>
              c.user.type === 'Bot' && c.body.includes('PR Validation')
            );
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body
              });
            }

  auto-label:
    name: Auto Label PR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Label PR
        uses: actions/labeler@v5
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          configuration-path: .github/labeler.yml
