---
name: Nix Image Build and Push

on:
  push:
    branches: [main]
    tags:
      - 'v*.*.*'
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-nix:
    name: Build and Push OCI via Nix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        system: [x86_64-linux, aarch64-linux]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes

      - name: Build image tarball for ${{ matrix.system }}
        run: |
          nix build .#packages.${{ matrix.system }}.mujaos-image

      - name: Log in to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Load image tar into Docker
        run: |
          docker load < result
          docker images | grep mujaos || true

      - name: Tag and push
        if: github.event_name != 'pull_request'
        run: |
          IMAGE_ID=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # Derive arch-specific tag suffix
          if [ "${{ matrix.system }}" = "x86_64-linux" ]; then ARCH_TAG="amd64"; else ARCH_TAG="arm64"; fi
          docker tag mujaos:latest "$IMAGE_ID:latest-$ARCH_TAG"
          docker push "$IMAGE_ID:latest-$ARCH_TAG"
